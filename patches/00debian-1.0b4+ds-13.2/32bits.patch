Index: kgb-arch-posix-by-slawek_1.0b4+ds/kgb_arch_posix_by_slawek.cpp
===================================================================
--- kgb-arch-posix-by-slawek_1.0b4+ds.orig/kgb_arch_posix_by_slawek.cpp
+++ kgb-arch-posix-by-slawek_1.0b4+ds/kgb_arch_posix_by_slawek.cpp
@@ -570,6 +570,7 @@ Also, give yourself credit in the help m
 #include <cmath>
 #include <ctime>
 #include <cassert>
+#include <stdint.h>
 #include <new>
 #include <string>
 #include <vector>
@@ -580,15 +581,17 @@ Also, give yourself credit in the help m
 #undef hash
 using namespace std;
 
+typedef int int32_t;
+
 const int PSCALE=4096;  // Integer scale for representing probabilities
 int MEM=3;        // Use about 6 MB * 2^MEM bytes of memory                      
 
 template <class T> inline int size(const T& t) {return t.size();}
 
-// 8-32 bit unsigned types, adjust as appropriate
-typedef unsigned char U8;
-typedef unsigned short U16;
-typedef unsigned long U32;
+// 8-32 bit unsigned types
+typedef uint8_t U8;
+typedef uint16_t U16;
+typedef uint32_t U32;
 
 // Fail if out of memory
 void handler() {
